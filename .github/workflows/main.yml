name: Master

on:
  push:
    branches:
      - test-pr-action
    paths-ignore:
      - 'docs/**'
      - '*.md'

jobs:
  build-app:
    runs-on: ubuntu-latest
    needs: [get-publish-version]
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 6.4.1

      - name: Gradle Version
        run: |
          echo ${{ needs.get-publish-version.outputs.publish-version }}
          sed -i s/version=.*/version=${{ needs.get-publish-version.outputs.publish-version }}/ gradle.properties
      
      - name: Gradle build
        run: |
          gradle -i build

      - name: debug after
        run: |
          ls -a
          ls build/libs
          cat gradle.properties

      - name: mkdir for artifact
        run: |
          mkdir artifacts
          cp build/libs/hbase-to-mongo-export-*.jar ./artifacts/

  # integration-test:
  #   runs-on: ubuntu-latest
  #   needs: [build-app]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Run Integration Tests
  #       run: |
  #         make integration-all          

  get-publish-version:
    runs-on: ubuntu-latest
    outputs:
      publish-version: ${{ steps.get-publish-version.outputs.publish-version }}
    steps:
      - name: Prepare SemVer
        id: prepare-semver
        run: |
          LATEST_VERSION=$(curl --silent "https://api.github.com/repos/${{ github.repository }}/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          [  -z "$LATEST_VERSION" ] && LATEST_VERSION="0.0.0"
          echo ::set-output name=latest_version_out::$LATEST_VERSION
          commit_message=$( echo "${{ github.event.head_commit.message }}" | sed 's/"//g')
          if [[ "${commit_message,,}" == *"major release"* ]]; then
            echo ::set-output name=semver_increment::"m"
          elif [[ "${commit_message,,}" == *"minor release"* ]]; then
            echo ::set-output name=semver_increment::"i"
          else
            echo ::set-output name=semver_increment::"p"
          fi
      - name: Increment SemVer
        id: semver
        uses: matt-FFFFFF/simple-semver@v0.1.0
        with:
          semver-input: ${{ steps.prepare-semver.outputs.latest_version_out }}
          increment: ${{ steps.prepare-semver.outputs.semver_increment }}
      - name: Get publish version
        id: get-publish-version
        run: |
          echo "::set-output name=publish-version::${{ steps.semver.outputs.semver }}"

  publish-github-release:
    runs-on: ubuntu-latest
    #needs: [build-app, get-publish-version, integration-test]
    needs: [build-app, get-publish-version]
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.get-publish-version.outputs.publish-version }}-test
          release_name: ${{ needs.get-publish-version.outputs.publish-version }}-test
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts
          asset_name: hbase-to-mongo-export-${{ needs.get-publish-version.outputs.publish-version }}.jar
          asset_content_type: application/java-archive



    # - name: Publish to GitHub Packages
    #   uses: gradle/gradle-build-action@v2
    #   with:
    #     arguments: publish
    #   env:
    #     USERNAME: ${{ github.actor }}
    #     TOKEN: ${{ secrets.GITHUB_TOKEN }}