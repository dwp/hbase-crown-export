# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle.kts" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle build

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle.kts" }}

      - run:
          name: mkdir for artifact
          command: |
            mkdir artifacts
            cp build/libs/hbase-to-mongo-export-*.jar ./artifacts/

      - persist_to_workspace:
          root: artifacts
          paths:
            - hbase-to-mongo-export-*.jar

  integration-test:
    docker:
      - image: circleci/python:3.7.3
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: "Run the integration test"
          command: |
            sudo pip3 install docker-compose
            export HBASE_TO_MONGO_EXPORT_VERSION=$(cat ./gradle.properties | cut -f2 -d'=')
            export DATA_KEY_SERVICE_URL=dummy.com
            export S3_BUCKET=dummy-bucket
            export S3_PREFIX_FOLDER=dummy-folder
            export AWS_DEFAULT_REGION=dummy-region
            export AWS_ACCESS_KEY_ID=dummy-key
            export AWS_SECRET_ACCESS_KEY=dummy-secret
            docker-compose build hbase hbase-populate hbase-to-mongo-export-file hbase-to-mongo-export-itest
            docker-compose up -d hbase hbase-populate
            sleep 5
            docker-compose up -d hbase-to-mongo-export-file
            sleep 5
            docker-compose up hbase-to-mongo-export-itest

  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ./artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            set -u
            set -o pipefail
            ls -l ./artifacts
            for jar in ./artifacts/*.jar; do
              mv -v $jar ${jar/-SNAPSHOT/}
            done
            LATEST_VERSION=$(curl --silent "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
            [  -z "$LATEST_VERSION" ] && LATEST_VERSION="0.0.0"
            VERSION=$(echo $LATEST_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
            ghr \
              -t ${GITHUB_TOKEN} \
              -u ${CIRCLE_PROJECT_USERNAME} \
              -r ${CIRCLE_PROJECT_REPONAME} \
              -c ${CIRCLE_SHA1} -delete \
              ${VERSION} ./artifacts/


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - integration-test:
          requires:
            - build
      - publish-github-release:
          requires:
            - integration-test
          filters:
            branches:
              only: master
